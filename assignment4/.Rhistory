x = 0.5x + t
}
x = 0
A4 = b=runif(100,min=1, max=20)
for (i in  1:100){
t = rnorm(1, mean=0, sd=1)
x <- x + 1
}
x = 0
A4 = b=runif(100,min=1, max=20)
for (i in  1:100){
t = rnorm(1, mean=0, sd=1)
x <- x + t
}
x = 0
A4 = b=runif(100,min=1, max=20)
for (i in  1:100){
t = rnorm(1, mean=0, sd=1)
x <- x + t
A4[i] = x
}
A4
data = read.csv('./Desktop/dataexam/sp500ret.csv')
View(data)
data = read.csv('./Desktop/dataexam/sp500ret.csv')
sort(data, decreasing = T)
View(data)
View(data)
data = read.csv('./Desktop/dataexam/sp500ret.csv')
data = data[order(data$index.r.,)]
data = data[order(data$index.r. , )]
order(data$index.r. , )
data = data[order(data$index.r. , decreasing = T)]
mode(data)
class(data))
class(data)
order(data$index.r. , decreasing = T)
data = data[order(data$index.r. , decreasing = T)]
data = data[order(data$index.r. , decreasing = F)]
data = read.csv('./Desktop/dataexam/sp500ret.csv')
data = data[order(data$index.r. , decreasing = F),]
View(data)
library(readtext)
install.packages(rea"readABF")
install.packages(install.packages(readtext)
)
install.packages('readtext')
data1 = readtext('./Desktop/dataexam/SP500index.txt')
library(readtext)
data1 = readtext('./Desktop/dataexam/SP500index.txt')
data1
View(data1)
View(data1)
data1 = read.table('./Desktop/dataexam/SP500index.txt')
data1
help(diff)
data1['GSPC.Adjusted']
View(data1)
View(data1)
class(ddat1)
class(data1)
data1$V7
rows(data1)
shape(data1)
data1$V7[1:100]
data1$V7[2:100]
len(data1$V70
len(data1$V700
len(data1$V7)
shape(data1$V7)
data1$V7[1:10]
data1$V7[2:10]
log(data1$V7[2:123])
log(exp(3))
as.numeric
log(as.numeric(data1$V7[1:123])
log(as.numeric(data1$V7[1:123]))
x1 = log(as.numeric(data1$V7[2:123]))
x2 = log(as.numeric(data1$V7[3:124]))
A6 = x2 - x1
a = c(1, 2, 3, 4)
mode(a))
mode(a)
my_vector <- 1:5
my_vector[1]
mean = mean(A6)
Mean = apply(A6, 2, mean)
Mean = apply(A6, 1, mean)
Mean = apply(A6, mean)
data3 = as.numeric(A6)
Mean = apply(A6, data3)
Mean = apply(data3, mean)
Mean = apply(data3, 1, mean)
Mean = apply(data3, 2, mean)
Mean = apply(data3, 0, mean)
Mean = apply(data3, 1, mean)
stDev = sd(A6)
stDev
A7 <- 1:4
Mean = mean(A6)
stDev = sd(A6)
Min = min(A6)
Max = max(A6)
A7[1] = mean
A7[2] = stDev
A7[3] = Min
A7[4] = Max
View(data)
View(data)
fit['Coefficients']
fit$coefficients
a =fit$coefficients
a
a =fit$coefficients
a
class(a)
size(a)
A1 = fit$coefficients
A1
row(A1)
shape(A1)
nrow(A1)
nrow(A2)
mode(A1))
mode(A1)
matrix(A1)
A1 = matrix(fit$coefficients)
size(A1)
nrow(A1)
nrow(A2)
ncol(A1)
2^0.5
1/2
exp(1)
BS <- function(S, K, M, c, Sigma, Rf){
d1 <- 1. / (M^0.5 * S) * (log(S/K)+(Rf+ Sigma^2/2.0) * M)
d2 <- d1 - sigma * M^0.5
C <- pnorm(d1) * S - pnorm(d2) * K *  exp(-Rf * M)
}
BS <- function(S, K, M, c, Sigma, Rf){
d1 <- 1. / (M^0.5 * S) * (log(S/K)+(Rf+ Sigma^2/2.0) * M)
d2 <- d1 - sigma * M^0.5
C <- pnorm(d1) * S - pnorm(d2) * K *  exp(-Rf * M)
return(C)
}
function(1, 2,3,4,5,6)
BS(1, 2,3,4,5,6)
BS <- function(S, K, M, c, Sigma, Rf){
d1 <- 1. / ( M^0.5 * S) * (log(S/K)+(Rf+ Sigma^2/2.0) * M)
d2 <- d1 - Sigma * M^0.5
C <- pnorm(d1) * S - pnorm(d2) * K *  exp(-Rf * M)
return(C)
}
BS(1, 2,3,4,5,6)
a1 = {80, 90, 100, 110, 120}
S = 100
r = 0
Sigma = 1.
b1 = c(10/360, 60/360, 110/360, 160/360, 210/360, 260/360, 310/360, 1)
a1 = c(80, 90, 100, 110, 120)
A10 = matrix(rep(0, runner*race), nrow=5, ncol=8)
for(i in 1:5){
for (j in 1:8)
{
A10[i, j] = BS(S, b1[j], a1[i], 1, 0)
}
}
BS <- function(S, K, M, Sigma, Rf){
d1 <- 1. / ( M^0.5 * Sigma) * (log(S/K)+(Rf+ Sigma^2/2.0) * M)
d2 <- d1 - Sigma * M^0.5
C <- pnorm(d1) * S - pnorm(d2) * K *  exp(-Rf * M)
return(C)
}
# problem 10
# Suppose that
S = 100
r = 0
Sigma = 1.
b1 = c(10/360, 60/360, 110/360, 160/360, 210/360, 260/360, 310/360, 1)
a1 = c(80, 90, 100, 110, 120)
A10 = matrix(rep(0, runner*race), nrow=5, ncol=8)
for(i in 1:5){
for (j in 1:8)
{
A10[i, j] = BS(S, b1[j], a1[i], 1, 0)
}
}
View(A10)
S = 100
r = 0
Sigma = 1.
b1 = c(10/360, 60/360, 110/360, 160/360, 210/360, 260/360, 310/360, 1)
a1 = c(80, 90, 100, 110, 120)
A10 = matrix(rep(0, runner*race), nrow=5, ncol=8)
for(i in 1:5){
for (j in 1:8)
{
A10[i, j] = BS(S, b1[j], a1[i], 0, 1)
}
}
View(A10)
View(A10)
data(data)
data = read.csv('./Desktop/courses_term1/asset_pricing/problem_set/set3/test_GRS.csv')
View(data)
data[:, 1:25]
type(data)
names(data)
View(data)
View(data)
data = read.csv('./Desktop/courses_term1/asset_pricing/problem_set/set3/test_GRS.csv')
data1 <- as.matrix(data)
factor.mat = data1[:,1:25]
ret.mat = data[:, 26] # 25 size-BM portfolio returns
GRS.test(ret.mat,factor.mat)$GRS.stat # Table 9C of Fama-French (1993)
data1
data = read.csv('./Desktop/courses_term1/asset_pricing/problem_set/set3/test_GRS.csv')
data1 <- as.matrix(data)
factor.mat = data1[:,1:25]
ret.mat = data[:, 26] # 25 size-BM portfolio returns
GRS.test(ret.mat,factor.mat)$GRS.stat # Table 9C of Fama-French (1993)
data = read.csv('./Desktop/courses_term1/asset_pricing/problem_set/set3/test_GRS.csv')
data1 <- as.matrix(data)
factor.mat = data1[1:672,1:25]
ret.mat = data[1:672, 26] # 25 size-BM portfolio returns
GRS.test(ret.mat,factor.mat)$GRS.stat # Table 9C of Fama-French (1993)
install.packages("GRS")
install.packages("GRS.test")
data = read.csv('./Desktop/courses_term1/asset_pricing/problem_set/set3/test_GRS.csv')
data1 <- as.matrix(data)
factor.mat = data1[1:672,1:25]
ret.mat = data[1:672, 26] # 25 size-BM portfolio returns
GRS.test(ret.mat,factor.mat)$GRS.stat # Table 9C of Fama-French (1993)
install.packages("GRS.test")
library('GRS.test')
data = read.csv('./Desktop/courses_term1/asset_pricing/problem_set/set3/test_GRS.csv')
data1 <- as.matrix(data)
factor.mat = data1[1:672,1:25]
ret.mat = data[1:672, 26] # 25 size-BM portfolio returns
GRS.test(ret.mat,factor.mat)$GRS.stat # Table 9C of Fama-French (1993)
data = read.csv('./Desktop/courses_term1/asset_pricing/problem_set/set3/test_GRS.csv')
data1 <- as.matrix(data)
factor.mat = data1[1:672,1:25]
ret.mat = data[1:672, 26] # 25 size-BM portfolio returns
GRS.test(ret.mat,factor.mat)
data = read.csv('./Desktop/courses_term1/asset_pricing/problem_set/set3/test_GRS.csv')
data1 <- as.matrix(data)
factor.mat = data1[1:672,1:25]
ret.mat = data[1:672, 26] # 25 size-BM portfolio returns
GRS.test(ret.mat,factor.mat)$GRS.stat
data = read.csv('./Desktop/courses_term1/asset_pricing/problem_set/set3/test_GRS.csv')
data1 <- as.matrix(data)
ret = data1[1:672,1:25]
factor = data[1:672, 26] # 25 size-BM portfolio returns
GRS.test(ret,factor)$GRS.stat
data1 <- as.matrix(data)
ret = data1[1:672,1:25]
factor = data[1:672, 26] # 25 size-BM portfolio returns
GRS.test(factorï¼Œret)
data1 <- as.matrix(data)
ret = data1[1:672,1:25]
factor = data[1:672, 26] # 25 size-BM portfolio returns
GRS.test(factor, ret)
GRS.test(factor, ret)
data = read.csv('./Desktop/courses_term1/asset_pricing/problem_set/set3/test_GRS.csv')
data1 <- as.matrix(data)
ret = data1[1:672,1:25]
factor = data[1:672, 26] # 25 size-BM portfolio returns
GRS.test(ret, factor)
data = read.csv('./Desktop/courses_term1/asset_pricing/problem_set/set3/test_GRS.csv')
data1 <- as.matrix(data)
ret = data1[1:672,1:25]
factor = data[1:672, 26] # 25 size-BM portfolio returns
GRS.test(ret, factor)
GRS.test(ret, factor)$stat
GRS.test(ret, factor)$GRS.stat
rm()
data = read.csv('./Desktop/courses_term1/asset_pricing/problem_set/set3/test_GRS.csv')
data1 <- as.matrix(data)
ret = data1[1:672,1:25]
factor = data[1:672, 26] # 25 size-BM portfolio returns
GRS.test(ret, factor)$GRS.stat
rm()
rm()
data = read.csv('./Desktop/courses_term1/asset_pricing/problem_set/set3/test_GRS.csv')
data1 <- as.matrix(data)
ret = data1[1:672,1:25]
factor = data[1:672, 26] # 25 size-BM portfolio returns
GRS.test(ret, factor)$GRS.stat
View(ret)
data = read.csv('./Desktop/courses_term1/asset_pricing/problem_set/set3/test_GRS.csv')
data1 <- as.matrix(data)
ret = data1[1:672,1:25]
factor = data[1:672, 26] # 25 size-BM portfolio returns
GRS.test(ret, factor)$GRS.stat
ret = data1[0:672,1:25]
ret = data1[1:672,0:25]
factor = data[1:672, 26] # 25 size-BM portfolio returns
GRS.test(ret, factor)$GRS.stat
View(data)
View(data)
size(data1)
shape(data1)
dim(data1)
ret = data1[1:672,2:26]
factor = data[1:672, 27] # 25 size-BM portfolio returns
GRS.test(ret, factor)$GRS.stat
data = read.csv('./Desktop/courses_term1/asset_pricing/problem_set/set3/test_GRS.csv')
data1 <- as.matrix(data)
ret = data1[1:672,2:26]
factor = data[1:672, 27] # 25 size-BM portfolio returns
GRS.test(ret, factor)$GRS.stat
GRS.test(ret, factor)$GRS.pval
GRS.test(ret, factor)
beta_36 <- vector(length = 636)
for (t in 37:672) {
lm <- lm(unlist(X25_5[t-36:t-1, 1]) ~ unlist(MRK[t-36:t-1, 1]))
beta_36[t-36] <- summary(lm)$coefficients[2]
}
GRS.test(ret, factor)beta_36 <- vector(length = 636)
for (t in 37:672) {
lm <- 1+t
beta_36[t-36] <- lm
}
beta_36
beta_36 <- vector(length = 636)
for (t in 37:672) {
lm <- t
beta_36[t-36] <- lm
}
clc()
clc
c
data = read.csv('./Desktop/courses_term1/asset_pricing/problem_set/set3/test_GRS.csv')
data1 <- as.matrix(data)
ret = data1[1:672,2:26]
factor = data[1:672, 27] # 25 size-BM portfolio returns
GRS.test(ret, factor)$GRS.stat
GRS.test(ret, factor)$GRS.pval
Cstack_info()
Cstack_info()
Cstack_info()
Cstack_info()
Cstack_info()
paneldf_time_dummy <- dummy_cols(paneldf,select_columns='quarter',remove_first_dummy = TRUE)
library(zoo)
library(sandwich)
library(lmtest)
library(plm)
library(car)
library(fastDummies)
panel_fin = read.dta13('./panel_fin.dta')
#panel_fin = read.csv('./panel_fin.csv')
paneldf <- pdata.frame(panel_fin, index = c('entity', 'quarter'))
#plm(y ~x1+x2+..., data=paneldf, model = c("within"))
#plm(y ~x1+x2+..., data=paneldf, model = c("random"))
#plm(y ~x1+x2+..., data=paneldf, model = c("between"))
#plmtest(panelmodel, effect = c("individual"), type = c( "bp"))
#phtest(femodel, remodel)
# Qa 1:
pd_roe <- plm(ret ~ l_ret + l_btm + l_roe, data = paneldf, model = c("pooling"))
summary(pd_roe)
# Qa 2:
pd_lep <- plm(ret ~ l_ret + l_btm + l_e_p, data = paneldf, model = c("pooling"))
summary(pd_lep)
library(zoo)
library(sandwich)
library(lmtest)
library(plm)
library(car)
library(readstata13)
library(fastDummies)
panel_fin = read.dta13('./panel_fin.dta')
setwd("Desktop/courses_term1/econometrics/problem_sets/assignment4/")
library(zoo)
library(sandwich)
library(lmtest)
library(plm)
library(car)
library(readstata13)
library(fastDummies)
panel_fin = read.dta13('./panel_fin.dta')
paneldf <- pdata.frame(panel_fin, index = c('entity', 'quarter'))
#plm(y ~x1+x2+..., data=paneldf, model = c("within"))
#plm(y ~x1+x2+..., data=paneldf, model = c("random"))
#plm(y ~x1+x2+..., data=paneldf, model = c("between"))
#plmtest(panelmodel, effect = c("individual"), type = c( "bp"))
#phtest(femodel, remodel)
# Qa 1:
pd_roe <- plm(ret ~ l_ret + l_btm + l_roe, data = paneldf, model = c("pooling"))
summary(pd_roe)
# Qa 2:
pd_lep <- plm(ret ~ l_ret + l_btm + l_e_p, data = paneldf, model = c("pooling"))
summary(pd_lep)
paneldf_time_dummy <- dummy_cols(paneldf,select_columns='quarter',remove_first_dummy = TRUE)
View(paneldf_time_dummy)
formula_b2 = 'ret ~ l_btm + l_roe'
i=1
while (i < 94) {
i = i + 1
formula_b1 <- paste(formula_b2, '+quarter_', i, sep = "")
}
formula_b1
formula_b1
ormula_b2 = 'ret ~ l_btm + l_roe'
i=1
while (i < 94) {
i = i + 1
formula_b2 <- paste(formula_b2, '+quarter_', i, sep = "")
}
formula_b2
roe_bank_dummy <- plm(formula_b2, data = paneldf_time_dummy, model = c("pooling"), index = c("entity","quarter"))
roe_time_dummy <- plm(formula_b2, data = paneldf_time_dummy, model = c("pooling"), index = c("entity","quarter"))
roe_time_dummy
summary(roe_time_dummy)
Hb20 = c()
i=1
while (i < 94) {
i = i + 1
test_i <- paste('quarter_', i, '=0',sep = "")
Hb20 <- append(Hb20, test_i)
}
test_resb2 = linearHypothesis(roe_bank_dummy, Hb20)
test_resb2
paneldf_time_dummy <- dummy_cols(paneldf,select_columns='quarter',remove_first_dummy = TRUE)
## get the formula:
formula_b2 = 'ret ~ l_ret + l_btm + l_roe'
i=1
while (i < 94) {
i = i + 1
formula_b2 <- paste(formula_b2, '+quarter_', i, sep = "")
}
roe_time_dummy <- plm(formula_b2, data = paneldf_time_dummy, model = c("pooling"), index = c("entity","quarter"))
## test for the bank dummy
Hb20 = c()
i=1
while (i < 94) {
i = i + 1
test_i <- paste('quarter_', i, '=0',sep = "")
Hb20 <- append(Hb20, test_i)
}
test_resb2 = linearHypothesis(roe_bank_dummy, Hb20)
test_resb2
pd_roe_rand <- plm(ret ~ l_ret + l_btm + l_roe, data = paneldf, model = c("random"))
pd_roe_fixed <- plm(ret ~ l_ret + l_btm + l_roe, data = paneldf, model = c("within"))
pd_roe_fixed
roe_bank_dummy
formula_b1 = 'ret ~ l_ret + l_btm + l_roe'
i=1
while (i < 868) {
i = i + 1
formula_b1 <- paste(formula_b1, '+entity_', i, sep = "")
}
roe_bank_dummy <- plm(formula_b1, data = paneldf_bank_dummy, model = c("pooling"), index = c("entity","quarter"))
paneldf_time_dummy <- dummy_cols(paneldf,select_columns='quarter',remove_first_dummy = TRUE)
formula_b1 = 'ret ~ l_ret + l_btm + l_roe'
i=1
while (i < 868) {
i = i + 1
formula_b1 <- paste(formula_b1, '+entity_', i, sep = "")
}
roe_bank_dummy <- plm(formula_b1, data = paneldf_bank_dummy, model = c("pooling"), index = c("entity","quarter"))
paneldf_time_dummy <- dummy_cols(paneldf,select_columns='quarter',remove_first_dummy = TRUE)
## get the formula:
formula_b2 = 'ret ~ l_ret + l_btm + l_roe'
i=1
while (i < 94) {
i = i + 1
formula_b2 <- paste(formula_b2, '+quarter_', i, sep = "")
}
roe_time_dummy <- plm(formula_b2, data = paneldf_time_dummy, model = c("pooling"), index = c("entity","quarter"))
## test for the bank dummy
roe_time_dummy
-0.0627503   0.0198174   0.6352550
pd_roe_fixed
test_resb2 = linearHypothesis(roe_time_dummy, Hb20)
test_resb2
test_resb2
roe_time_dummy
summary(roe_time_dummy)
roe_time_dummy
0.0010349  -0.0627503   0.0198174   0.6352550
pd_roe_fixed
plmtest(pd_roe_fixed, effect = c("l_ret", 'l_btm', 'l_roe'), type = c( "bp"))
plmtest(pd_roe_fixed, effect = c("l_ret"), type = c( "bp"))
plmtest(pd_roe_fixed, effect = c("individual"), type = c( "bp"))
summary(pd_roe_fixed)
pd_roe <- plm(ret ~ l_ret + l_btm + l_roe, data = paneldf, model = c("pooling"))
summary(pd_roe)
# Qa 2:
pd_lep <- plm(ret ~ l_ret + l_btm + l_e_p, data = paneldf, model = c("pooling"))
summary(pd_lep)
test_resb2
pd_roe_fixed
roe_bank_dummy
roe_bank_dummy <- plm(formula_b1, data = paneldf_bank_dummy, model = c("pooling"), index = c("entity","quarter"))
paneldf_bank_dummy <- dummy_cols(paneldf,select_columns='entity',remove_first_dummy = TRUE)
formula_b1 = 'ret ~ l_ret + l_btm + l_roe'
i=1
while (i < 868) {
i = i + 1
formula_b1 <- paste(formula_b1, '+entity_', i, sep = "")
}
roe_bank_dummy <- plm(formula_b1, data = paneldf_bank_dummy, model = c("pooling"), index = c("entity","quarter"))
## test for the bank du
roe_bank_dummy
pd_roe_fixed
summary(pd_roe_fixed)
setwd("Desktop/courses_term1/econometrics/problem_sets/assignment2/")
setwd("Desktop/courses_term1/econometrics/problem_sets/assignment2/")
setwd("Desktop/courses_term1/econometrics/problem_sets/assignment2/")
setwd("Desktop/courses_term1/econometrics/problem_sets/assignment2/")
